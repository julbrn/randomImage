{"version":3,"file":"main.js","mappings":"mBAAO,ICAMA,EAAiBC,SAASC,cAAc,UACxCC,EAASF,SAASC,cAAc,WAEhCE,GADmBH,SAASC,cAAc,2BAC1BD,SAASC,cAAc,oBACvCG,EAASJ,SAASK,eAAe,UACjCC,EAAWN,SAASK,eAAe,aACnCE,EAAQP,SAASK,eAAe,SAChCG,EAAeR,SAASC,cAAc,iBACtCQ,EAAaP,EAAOQ,YACpBC,EAAOX,SAASC,cAAc,SAC9BW,EAAYD,EAAKV,cAAc,gBAC/BY,EAAab,SAASc,kBAAkB,e,0GCMrDC,QAAQC,IAAIH,GAGZ,IAAMI,EAAgB,SAACC,GAA4C,IAAjCC,EAAiC,uDAArB,iBACxCD,GACFhB,EAAAA,YAAqBiB,EACrBjB,EAAAA,QAAe,CAAC,CAACkB,MAAO,WAAY,CAACA,MAAO,YAAa,MAEzDlB,EAAAA,YAAqBO,GAqCzBE,EAAAA,iBAAsB,UAAU,SAACU,GAC/BA,EAAIC,iBACJ,IACIC,EAHmC,EAEjCC,EAAaZ,EAAUa,MAFU,E,25BAAA,CAIhBZ,GAJgB,IAIvC,IAAK,EAAL,qBAAmC,KAAxBa,EAAwB,QACjC,GAAIA,EAASC,QAAS,CACpBJ,EAAgBG,EAASD,MACzB,MAEFF,EAAgB,SATqB,8BAWvCR,QAAQC,IAAIO,GAvCd,SAAqBC,EAAYD,GAC/BN,GAAc,GACd,IAAMW,EANCC,KAAKC,MAAM,EAAAD,KAAKE,SAMW,GAClCC,MAAM,gDAAD,OAAiDR,EAAjD,kBAAqED,EAArE,4CFrCiB,gDEsCnBU,MAAK,SAASC,GACb,OAAOA,EAASC,UAEjBF,MAAK,SAASG,GACbrB,QAAQC,IAAIoB,GACZrC,EAAesC,MAAMC,gBACnB,OAASF,EAAKG,QAAQX,GAAWY,KAAKC,QAAS,IACjDtC,EAAcO,YAAc,UAAY0B,EAAKG,QAAQX,GAAWc,aAAeN,EAAKG,QAAQX,GAAWe,iBAAmB,4BAC1HvC,EAAOM,YAAc0B,EAAKG,QAAQX,GAAWgB,KAAKC,KAClD,IAAMC,EAAiD,mBAArCV,EAAKG,QAAQX,GAAWgB,KAAKG,IAA8C,yBAE5EX,EAAKG,QAAQX,GAAWgB,KAAKG,IAC9CzC,EAASI,YAAcoC,EACvBvC,EAAMG,YAAcsC,OAAOZ,EAAKG,QAAQX,GAAWrB,OAAO0C,iBAC1DzC,EAAa0C,KAAOd,EAAKG,QAAQX,GAAWuB,MAAMC,SAElD5C,EAAa6C,aAAa,SAAU,aAErCC,OAAM,SAASC,GACdxC,QAAQC,IAAIuC,MAEbC,SAAQ,WAAOvC,GAAc,MAehCwC,CAAYjC,EAAYD,O","sources":["webpack://randomimage_project/./src/components/Api.js","webpack://randomimage_project/./src/components/utils.js","webpack://randomimage_project/./src/pages/index.js"],"sourcesContent":["export const clientID = 'UBzeoRZp2HJ4hKExE0IYJ7pDUM8jFzUg25tnDfYg4OA';\n","export const imageContainer = document.querySelector('.image');\nexport const button = document.querySelector('.button');\nexport const randomizerButton = document.querySelector('.button_type_randomizer');\nexport const randomCaption = document.querySelector('.image__caption');\nexport const author = document.getElementById('author');\nexport const userInfo = document.getElementById('aboutUser');\nexport const likes = document.getElementById('likes')\nexport const downloadLink = document.querySelector('.downloadLink');\nexport const buttonText = button.textContent;\nexport const form = document.querySelector('.form');\nexport const formInput = form.querySelector('.form__input');\nexport const radioBoxes = document.getElementsByName('colorPicker');\n\n","import './index.css';\nimport {clientID} from \"../components/Api.js\";\nimport {\n  imageContainer,\n  button,\n  randomCaption,\n  author,\n  userInfo,\n  likes,\n  downloadLink,\n  buttonText,\n  form,\n  formInput,\n  radioBoxes\n} from \"../components/utils.js\";\n\n\nconsole.log(radioBoxes);\n\n/**Изменение текста и цвета текста кнопки при ожидании ответа с сервера*/\nconst renderLoading = (isLoading, loadingText='Please wait...') => {\n  if (isLoading) {\n    button.textContent = loadingText;\n    button.animate([{color: '#e16162'}, {color: '#001e1d'}], 1000)\n  } else {\n    button.textContent = buttonText;\n  }\n}\n\nfunction selectRandomNum(min, max) { // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\n\nfunction changePhoto(preference, selectedColor) {\n  renderLoading(true);\n  const randomNum = selectRandomNum(1, 3)\n  fetch(`https://api.unsplash.com/search/photos?query=${preference}&color=${selectedColor}&orientation=landscape&client_id=${clientID}`)\n    .then(function(response) {\n      return response.json()\n    })\n    .then(function(data){\n      console.log(data);\n      imageContainer.style.backgroundImage =\n        'url(' + data.results[randomNum].urls.regular +')';\n      randomCaption.textContent = 'Info: ' + (data.results[randomNum].description || data.results[randomNum].alt_description || 'Too good to be described');\n      author.textContent = data.results[randomNum].user.name;\n      const userAbout = data.results[randomNum].user.bio == ('[object Object]' || 'null' || '') ? ('Preferred' +\n        ' not' +\n        ' to share') : data.results[randomNum].user.bio;\n      userInfo.textContent = userAbout;\n      likes.textContent = Number(data.results[randomNum].likes).toLocaleString();\n      downloadLink.href = data.results[randomNum].links.download;\n      /**Страница для скачивания фото открывается в новом окне*/\n      downloadLink.setAttribute('target', '_blank');\n    })\n    .catch(function(error) {\n      console.log(error)\n    })\n    .finally(() => {renderLoading(false)})\n}\n\nform.addEventListener('submit', (evt) => {\n  evt.preventDefault();\n  const preference = formInput.value;\n  let selectedColor;\n  for (const radioBox of radioBoxes) {\n    if (radioBox.checked) {\n      selectedColor = radioBox.value;\n      break;\n    }\n    selectedColor = 'white';\n  }\n  console.log(selectedColor)\n  changePhoto(preference, selectedColor);\n});\n"],"names":["imageContainer","document","querySelector","button","randomCaption","author","getElementById","userInfo","likes","downloadLink","buttonText","textContent","form","formInput","radioBoxes","getElementsByName","console","log","renderLoading","isLoading","loadingText","color","evt","preventDefault","selectedColor","preference","value","radioBox","checked","randomNum","Math","floor","random","fetch","then","response","json","data","style","backgroundImage","results","urls","regular","description","alt_description","user","name","userAbout","bio","Number","toLocaleString","href","links","download","setAttribute","catch","error","finally","changePhoto"],"sourceRoot":""}