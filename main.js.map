{"version":3,"file":"main.js","mappings":"mBAAO,IACIA,EAAQ,6FADG,+CCAXC,EAAiBC,SAASC,cAAc,UACxCC,EAASF,SAASC,cAAc,WAChCE,EAAmBH,SAASC,cAAc,2BAC1CG,EAAgBJ,SAASC,cAAc,mBACvCI,EAASL,SAASM,eAAe,UACjCC,EAAeP,SAASM,eAAe,YACvCE,EAAQR,SAASM,eAAe,SAChCG,EAAeT,SAASC,cAAc,iBACtCS,EAAaR,EAAOS,YCOzBC,EAAgB,SAACC,GAA4C,IAAjCC,EAAiC,uDAArB,iBACxCD,GACFX,EAAAA,YAAqBY,EACrBZ,EAAAA,QAAe,CAAC,CAACa,MAAO,WAAY,CAACA,MAAO,YAAa,MAEzDb,EAAAA,YAAqBQ,GA4BzBP,EAAiBa,iBAAiB,SAxBlC,WACEJ,GAAc,GACdK,MAAMnB,GACHoB,MAAK,SAASC,GACb,OAAOA,EAASC,UAEjBF,MAAK,SAASG,GACbtB,EAAeuB,MAAMC,gBACnB,OAASF,EAAKG,KAAKC,QAAS,IAC9BrB,EAAcO,YAAc,UAAYU,EAAKK,aAAeL,EAAKM,iBACjEtB,EAAOM,YAAcU,EAAKO,KAAKC,KAC/BtB,EAAaI,YAAcU,EAAKS,SAASC,OAASV,EAAKS,SAASE,SAAW,yBAE3ExB,EAAMG,YAAcsB,OAAOZ,EAAKb,OAAO0B,iBACvCzB,EAAa0B,KAAOd,EAAKe,MAAMC,SAE/B5B,EAAa6B,aAAa,SAAU,aAErCC,OAAM,SAASC,GACdC,QAAQC,IAAIF,MAEbG,SAAQ,WAAO/B,GAAc,U","sources":["webpack://randomimage_project/./src/components/Api.js","webpack://randomimage_project/./src/components/utils.js","webpack://randomimage_project/./src/pages/index.js"],"sourcesContent":["export let clientID = 'UBzeoRZp2HJ4hKExE0IYJ7pDUM8jFzUg25tnDfYg4OA';\nexport let endpoint =\n  `https://api.unsplash.com/photos/random/?query=bird&orientation=landscape&client_id=${clientID}`;\n","export let imageContainer = document.querySelector('.image');\nexport let button = document.querySelector('.button');\nexport let randomizerButton = document.querySelector('.button_type_randomizer');\nexport let randomCaption = document.querySelector('.image__caption');\nexport let author = document.getElementById('author');\nexport let userLocation = document.getElementById('location');\nexport let views = document.getElementById('views')\nexport let downloadLink = document.querySelector('.downloadLink');\nexport let buttonText = button.textContent;\n\n","import './index.css';\nimport {endpoint} from \"../components/Api.js\";\nimport {\n  imageContainer,\n  button,\n  randomizerButton,\n  randomCaption,\n  author,\n  userLocation,\n  views,\n  downloadLink,\n  buttonText,\n} from \"../components/utils.js\";\n\n/**Изменение текста и цвета текста кнопки при ожидании ответа с сервера*/\nconst renderLoading = (isLoading, loadingText='Please wait...') => {\n  if (isLoading) {\n    button.textContent = loadingText;\n    button.animate([{color: '#e16162'}, {color: '#001e1d'}], 1000)\n  } else {\n    button.textContent = buttonText;\n  }\n}\n\nfunction changePhoto() {\n  renderLoading(true);\n  fetch(endpoint)\n    .then(function(response) {\n      return response.json()\n    })\n    .then(function(data){\n      imageContainer.style.backgroundImage =\n        'url(' + data.urls.regular +')';\n      randomCaption.textContent = 'Info: ' + (data.description || data.alt_description);\n      author.textContent = data.user.name;\n      userLocation.textContent = data.location.title || data.location.country || 'Preferred not' +\n        ' to share';\n      views.textContent = Number(data.views).toLocaleString();\n      downloadLink.href = data.links.download;\n      /**Страница для скачивания фото открывается в новом окне*/\n      downloadLink.setAttribute('target', '_blank');\n    })\n    .catch(function(error) {\n      console.log(error)\n    })\n    .finally(() => {renderLoading(false)})\n}\n\nrandomizerButton.addEventListener('click', changePhoto);\n"],"names":["endpoint","imageContainer","document","querySelector","button","randomizerButton","randomCaption","author","getElementById","userLocation","views","downloadLink","buttonText","textContent","renderLoading","isLoading","loadingText","color","addEventListener","fetch","then","response","json","data","style","backgroundImage","urls","regular","description","alt_description","user","name","location","title","country","Number","toLocaleString","href","links","download","setAttribute","catch","error","console","log","finally"],"sourceRoot":""}